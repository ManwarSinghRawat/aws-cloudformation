import requests
import random
import json
import scipy.stats

params = {
  "Time": {
    "min": 0,
    "max": 172792,
    "mean": 94813.8595750807,
    "std": 47488.1459545658
  },
  "V1": {
    "min": -56.4075096313,
    "max": 2.4549299912,
    "mean": 0,
    "std": 1.9586958039
  },
  "V2": {
    "min": -72.7157275629,
    "max": 22.0577289905,
    "mean": 5.6881744e-16,
    "std": 1.6513085795
  },
  "V3": {
    "min": -48.3255893624,
    "max": 9.3825584328,
    "mean": -0,
    "std": 1.5162550052
  },
  "V4": {
    "min": -5.6831711982,
    "max": 16.8753440336,
    "mean": 0,
    "std": 1.4158685749
  },
  "V5": {
    "min": -113.7433067111,
    "max": 34.8016658767,
    "mean": -0,
    "std": 1.380246734
  },
  "V6": {
    "min": -26.1605059358,
    "max": 73.301625546,
    "mean": 0,
    "std": 1.3322710898
  },
  "V7": {
    "min": -43.5572415712,
    "max": 120.5894939452,
    "mean": -0,
    "std": 1.2370935982
  },
  "V8": {
    "min": -73.2167184553,
    "max": 20.0072083651,
    "mean": -1.927027709e-16,
    "std": 1.1943529027
  },
  "V9": {
    "min": -13.4340663182,
    "max": 15.5949946071,
    "mean": -0,
    "std": 1.0986320892
  },
  "V10": {
    "min": -24.5882624372,
    "max": 23.7451361207,
    "mean": 0,
    "std": 1.0888497654
  },
  "V11": {
    "min": -4.7974734648,
    "max": 12.0189131816,
    "mean": 9.170318144e-16,
    "std": 1.0207130277
  },
  "V12": {
    "min": -18.6837146333,
    "max": 7.8483920756,
    "mean": -0,
    "std": 0.9992013895
  },
  "V13": {
    "min": -5.7918812063,
    "max": 7.1268829586,
    "mean": 0,
    "std": 0.9952742301
  },
  "V14": {
    "min": -19.2143254903,
    "max": 10.5267660518,
    "mean": 0,
    "std": 0.9585956113
  },
  "V15": {
    "min": -4.4989446768,
    "max": 8.8777415977,
    "mean": 0,
    "std": 0.9153160116
  },
  "V16": {
    "min": -14.1298545175,
    "max": 17.3151115176,
    "mean": 0,
    "std": 0.8762528874
  },
  "V17": {
    "min": -25.1627993693,
    "max": 9.2535262505,
    "mean": -7.528491456e-16,
    "std": 0.8493370637
  },
  "V18": {
    "min": -9.498745921,
    "max": 5.0410691854,
    "mean": 4.328772269e-16,
    "std": 0.8381762095
  },
  "V19": {
    "min": -7.2135274302,
    "max": 5.5919714273,
    "mean": 9.049732488e-16,
    "std": 0.8140405008
  },
  "V20": {
    "min": -54.4977204946,
    "max": 39.4209042482,
    "mean": 5.085503397e-16,
    "std": 0.7709250249
  },
  "V21": {
    "min": -34.8303821448,
    "max": 27.2028391573,
    "mean": 1.537293651e-16,
    "std": 0.7345240144
  },
  "V22": {
    "min": -10.9331436977,
    "max": 10.5030900899,
    "mean": 7.95990853e-16,
    "std": 0.7257015604
  },
  "V23": {
    "min": -44.8077352038,
    "max": 22.5284116898,
    "mean": 5.367589788e-16,
    "std": 0.6244602956
  },
  "V24": {
    "min": -2.8366269187,
    "max": 4.5845491369,
    "mean": 0,
    "std": 0.6056470678
  },
  "V25": {
    "min": -10.295397075,
    "max": 7.5195886787,
    "mean": 0,
    "std": 0.5212780705
  },
  "V26": {
    "min": -2.6045505528,
    "max": 3.5173456116,
    "mean": 0,
    "std": 0.4822270133
  },
  "V27": {
    "min": -22.5656793208,
    "max": 31.6121981061,
    "mean": -3.660160614e-16,
    "std": 0.403632495
  },
  "V28": {
    "min": -15.4300839055,
    "max": 33.8478078189,
    "mean": -1.206048853e-16,
    "std": 0.3300832642
  },
  "Amount": {
    "min": 0,
    "max": 25691.16,
    "mean": 88.3496192509,
    "std": 250.1201092402
  },
  "Class": {
    "min": 0,
    "max": 1,
    "mean": 0.0017274856,
    "std": 0.0415271896
  }
}

def calc(colname):
  return scipy.stats.truncnorm.rvs((params[colname]['min']-params[colname]['mean'])/params[colname]['std'],(params[colname]['max']-params[colname]['mean'])/params[colname]['std'],loc=params[colname]['mean'],scale=params[colname]['std'])

for i in range(100):
  payload = {
    "features": [
      [
        0,
        calc('V1'),
        calc('V2'),
        calc('V3'),
        calc('V4'),
        calc('V5'),
        calc('V6'),
        calc('V7'),
        calc('V8'),
        calc('V9'),
        calc('V10'),
        calc('V11'),
        calc('V12'),
        calc('V13'),
        calc('V14'),
        calc('V15'),
        calc('V16'),
        calc('V17'),
        calc('V18'),
        calc('V19'),
        calc('V20'),
        calc('V21'),
        calc('V22'),
        calc('V23'),
        calc('V24'),
        calc('V25'),
        calc('V26'),
        calc('V27'),
        calc('V28'),
        10,
      ]
    ]
  }

  #print payload
  r = requests.post("http://52.212.196.108:5000/predict", headers={"Content-Type": "application/json"}, json=payload)
  #print(r.text)

  data = json.loads(r.text)
  #print data['scores'][0]
  print "{0:.0f}%".format(data['scores'][0] * 100)
